/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { Artist } from "../../artist/base/Artist";
import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { DifficultyLevel } from "../../difficultyLevel/base/DifficultyLevel";
import { Genre } from "../../genre/base/Genre";
import { Language } from "../../language/base/Language";
import { SongChord } from "../../songChord/base/SongChord";

@ObjectType()
class Song {
  @ApiProperty({
    required: false,
    type: () => Artist,
  })
  @ValidateNested()
  @Type(() => Artist)
  @IsOptional()
  artist?: Artist | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: () => DifficultyLevel,
  })
  @ValidateNested()
  @Type(() => DifficultyLevel)
  @IsOptional()
  difficultyLevel?: DifficultyLevel | null;

  @ApiProperty({
    required: false,
    type: () => Genre,
  })
  @ValidateNested()
  @Type(() => Genre)
  @IsOptional()
  genre?: Genre | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: () => Language,
  })
  @ValidateNested()
  @Type(() => Language)
  @IsOptional()
  language?: Language | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lyrics!: string | null;

  @ApiProperty({
    required: false,
    type: () => [SongChord],
  })
  @ValidateNested()
  @Type(() => SongChord)
  @IsOptional()
  songChords?: Array<SongChord>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { Song as Song };
